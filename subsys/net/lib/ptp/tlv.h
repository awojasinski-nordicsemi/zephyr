/*
 * Copyright (c) 2024
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * @file tlv.h
 * @brief
 *
 * References are to version 2019 of IEEE 1588, ("PTP")
 */

#ifndef ZEPHYR_INCLUDE_PTP_TLV_H_
#define ZEPHYR_INCLUDE_PTP_TLV_H_

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

#include "msg.h"

/**
 * @brief Type of TLV (time, lenght, value)
 *
 * @note based on IEEE 1588-2019 Section 14.1.1 Table 52
 */
enum ptp_tlv_type {
	PTP_TLV_TYPE_MANAGEMENT = 1,
	PTP_TLV_TYPE_MANAGEMENT_ERROR_STATUS,
	PTP_TLV_TYPE_ORGANIZATION_EXTENSION,
	PTP_TLV_TYPE_REQUEST_UNICAST_TRANSMISSION,
	PTP_TLV_TYPE_GRANT_UNICAST_TRANSMISSION,
	PTP_TLV_TYPE_CANCEL_UNICAST_TRANSMISSION,
	PTP_TLV_TYPE_ACKNOWLEDGE_CANCEL_UNICAST_TRANSMISSION,
	PTP_TLV_TYPE_PATH_TRACE,
	PTP_TLV_TYPE_ORGANIZATION_EXTENSION_PROPAGATE = 0x4000,
	PTP_TLV_TYPE_ENHANCED_ACCURACY_METRICS,
	PTP_TLV_TYPE_ORGANIZATION_EXTENSION_DO_NOT_PROPAGATE = 0x8000,
	PTP_TLV_TYPE_L1_SYNC,
	PTP_TLV_TYPE_PORT_COMMUNICATION_AVAILABILITY,
	PTP_TLV_TYPE_PROTOCOL_ADDRESS,
	PTP_TLV_TYPE_SLAVE_RX_SYNC_TIMING_DATA,
	PTP_TLV_TYPE_SLAVE_RX_SYNC_COMPUTED_DATA,
	PTP_TLV_TYPE_SLAVE_TX_EVENT_TIMESTAMPS,
	PTP_TLV_TYPE_CUMULATIVE_RATE_RATIO,
	PTP_TLV_TYPE_PAD,
	PTP_TLV_TYPE_AUTHENTICATION,
};

/**
 * @brief PTP managenment message action field
 *
 * @note based on IEEE 1588-2019 Section 15.4.1.6 Table 57
 */
enum ptp_mgmt_op {
	PTP_MGMT_GET,
	PTP_MGMT_SET,
	PTP_MGMT_RESP,
	PTP_MGMT_CMD,
	PTP_MGMT_ACK,
};

/**
 * @brief PTP managenment message ID
 *
 * @note based on IEEE 1588-2019 Section 15.5.2.3 Table 59
 */
enum ptp_mgmt_id {
	PTP_MGMT_NULL_PTP_MANAGEMENT = 0x0,
	PTP_MGMT_CLOCK_DESCRIPTION,
	PTP_MGMT_USER_DESCRIPTION,
	PTP_MGMT_SAVE_IN_NON_VOLATILE_STORAGE,
	PTP_MGMT_RESET_NON_VOLATILE_STORAGE,
	PTP_MGMT_INITIALIZE,
	PTP_MGMT_FAULT_LOG,
	PTP_MGMT_FAULT_LOG_RESET,
	PTP_MGMT_DEFAULT_DATA_SET = 0x2000,
	PTP_MGMT_CURRENT_DATA_SET,
	PTP_MGMT_PARENT_DATA_SET,
	PTP_MGMT_TIME_PROPERTIES_DATA_SET,
	PTP_MGMT_PORT_DATA_SET,
	PTP_MGMT_PRIORITY1,
	PTP_MGMT_PRIORITY2,
	PTP_MGMT_DOMAIN,
	PTP_MGMT_SLAVE_ONLY,
	PTP_MGMT_LOG_ANNOUNCE_INTERVAL,
	PTP_MGMT_ANNOUNCE_RECEIPT_TIMEOUT,
	PTP_MGMT_LOG_SYNC_INTERVAL,
	PTP_MGMT_VERSION_NUMBER,
	PTP_MGMT_ENABLE_PORT,
	PTP_MGMT_DISABLE_PORT,
	PTP_MGMT_TIME,
	PTP_MGMT_CLOCK_ACCURACY,
	PTP_MGMT_UTC_PROPERTIES,
	PTP_MGMT_TRACEBILITY_PROPERTIES,
	PTP_MGMT_TIMESCALE_PROPERTIES,
	PTP_MGMT_UNICAST_NEGOTIATION_ENABLE,
	PTP_MGMT_PATH_TRACE_LIST,
	PTP_MGMT_PATH_TRACE_ENABLE,
	PTP_MGMT_GRANDMASTER_CLUSTER_TABLE,
	PTP_MGMT_UNICAST_MASTER_TABLE,
	PTP_MGMT_UNICAST_MASTER_MAX_TABLE_SIZE,
	PTP_MGMT_ACCEPTABLE_MASTER_TABLE,
	PTP_MGMT_ACCEPTABLE_MASTER_TABLE_ENABLED,
	PTP_MGMT_ACCEPTABLE_MASTER_MAX_TABLE_SIZE,
	PTP_MGMT_ALTERNATE_MASTER,
	PTP_MGMT_ALTERNATE_TIME_OFFSET_ENABLE,
	PTP_MGMT_ALTERNATE_TIME_OFFSET_NAME,
	PTP_MGMT_ALTERNATE_TIME_OFFSET_MAX_KEY,
	PTP_MGMT_ALTERNATE_TIME_OFFSET_PROPERTIES,
	PTP_MGMT_EXTERNAL_PORT_CONFIGURATION_ENABLED = 0x3000,
	PTP_MGMT_MASTER_ONLY,
	PTP_MGMT_HOLDOVER_UPGRADE_ENABLE,
	PTP_MGMT_EXT_PORT_CONFIG_PORT_DATA_SET,
	PTP_MGMT_TRANSPARENT_CLOCK_DEFAULT_DATA_SET = 0x4000,
	PTP_MGMT_TRANSPARENT_CLOCK_PORT_DATA_SET,
	PTP_MGMT_PRIMARY_DOMAIN,
	PTP_MGMT_DELAY_MECHANISM = 0x6000,
	PTP_MGMT_LOG_MIN_PDELAY_REQ_INTERVAL,
};

struct ptp_tlv_mgmt {
	uint16_t type;
	uint16_t length;
	uint16_t id;
	uint8_t  data[0];
};

/**
 * @brief Function for getting type of action to be taken on recipt of the PTP message.
 *
 * @param[in] msg Pointer to the PTP message.
 *
 * @return Type of action to be taken.
 */
enum ptp_mgmt_op ptp_mgmt_action_get(struct ptp_msg *msg);

/**
 * @brief
 *
 * @param[in]
 *
 * @return Type of TLV message.
 */
enum ptp_tlv_type ptp_tlv_type_get(struct ptp_tlv *tlv);

#ifdef __cplusplus
}
#endif

/**
 * @}
 */


#endif /* ZEPHYR_INCLUDE_PTP_TLV_H_ */
