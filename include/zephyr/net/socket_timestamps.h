/*
 * Copyright (c) 2024 BayLibre SAS
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef ZEPHYR_INCLUDE_NET_SOCKET_TIMESTAMPING_H_
#define ZEPHYR_INCLUDE_NET_SOCKET_TIMESTAMPING_H_

/**
 * @brief BSD Sockets compatible API
 * @defgroup bsd_sockets BSD Sockets compatible API
 * @ingroup networking
 * @{
 */

#include <zephyr/device.h>
#include <zephyr/net/socket.h>

/* Flags for SO_TIMESTAMPING option of Socket Level Option */
enum {
	/* Timestamps of TX packet obtained from hardware.
	   The flag can be enabled via socket option or control message. */
	SOF_TIMESTAMPING_TX_HARDWARE = (1 << 0),

	/* If hardware timestamps are off or fail, than timestamps are generated it in software.
	   The flag can be enabled via socket option or control message. */
	SOF_TIMESTAMPING_TX_SOFTWARE = (1 << 1),

	/* Return unmodified timestamps as generated by hardware. */
	SOF_TIMESTAMPING_RX_HARDWARE = (1 << 2),

	/* If SOF_TIMESTAMPING_RX_HARDWARE is off or fails, than timestamps are generated
	   when a packets is passed from driver to a network stack. */
	SOF_TIMESTAMPING_RX_SOFTWARE = (1 << 3),

	/* system time stamp generated in software */
	SOF_TIMESTAMPING_SOFTWARE = (1 << 4),

	/* use hardware time stamp but transform it to the system time base */
	SOF_TIMESTAMPING_SYS_HARDWARE = (1 << 5),

	/* return raw hardware timestamp */
	SOF_TIMESTAMPING_RAW_HARDWARE = (1 << 6),

	/* */
	SOF_TIMESTAMPING_BIND_PHC = (1 << 7),
};

/**
 * Structure holding flags for SO_TIMESTAMPING option and
 * pointer to the device implementing ptp_clock driver API.
 * The device is used if @ref SOF_TIMESTAMPING_BIND_PHC flag is set.
*/
struct net_socket_timestamping {
	int flags;
	struct device *phc;
};

/**
 * @}
 */

#endif /* ZEPHYR_INCLUDE_NET_SOCKET_TIMESTAMPING_H_ */
